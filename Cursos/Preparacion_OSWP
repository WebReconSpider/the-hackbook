# Preparación OSWP (Curso s4vitar)

# Índice de los contenidos
- [[#1. Modo monitor CONCEPTO|1. Modo monitor CONCEPTO]]

---------------
# Contenido Resumido y Ampliado del Curso

## 1. Modo monitor CONCEPTO

El modo monitor es fundamental para cualquier ataque a redes inalámbricas, ya que permite a la tarjeta de red capturar todos los paquetes que circulan por el aire, independientemente de a quién vayan dirigidos.

### Explicación técnica:
- **Definición**: El modo monitor es un estado especial de las tarjetas de red inalámbricas que permite capturar todos los paquetes sin estar asociado a ningún punto de acceso.
- **Diferencia con modo normal**: En modo normal (managed), la tarjeta solo procesa paquetes dirigidos a su MAC.

## 2. Configuración de la tarjeta de red en modo monitor

### Procedimiento detallado:
1. Identificar la interfaz inalámbrica:
   ```bash
   ifconfig
   ```

2.  Detener procesos que puedan interferir:
   ```bash
airmon-ng check kill
# Esto mata NetworkManager, wpa_supplicant, dhclient, etc.
```

3. Activar el modo monitor:
   ```bash
   sudo airmon-ng start wlan0
   ```
   Donde "wlan0" debe reemplazarse por el nombre de tu interfaz.

- Otra opción: de forma manual:
```bash
sudo ip link set wlan0 down
sudo iw dev wlan0 set type monitor
sudo ip link set wlan0 up
```

4. Verificar que el modo monitor está activo:
   ```bash
   # ya no se ve en ifconfig
   iwconfig
   # si pone 'DOWN':
   ifconfig wlan0 up
   ```
   La interfaz debería mostrar "Mode:Monitor"

6. Parar el modo monitor:
   ```bash
   airmon-ng stop wlan0
   /etc/init.d/networking restart
   ```

### ¿Qué es **`wpa_supplicant`**?
Es el proceso que se encarga de gestionar la conexión WiFi segura en Linux. Función:
- Autenticarte en el punto de acceso.
- Manejar la negociación de claves.
- Mantener la conexión activa.

Sin `wpa_supplicant`, no te puedes conectar a redes WiFi cifradas.

Por eso, cuando estás conectado a WiFi normal (modo _managed_), el proceso está corriendo en segundo plano.

Cuando pones la tarjeta en **modo monitor**, este proceso sigue intentando gestionar la conexión WiFi, y te puede interferir (por eso se recomienda matarlo con `airmon-ng check kill`).
### ¿Qué es **`dhclient`**?
 Es el cliente DHCP de Linux. Función:

- Pedirle al router una dirección IP cuando te conectas a una red.
- Configurar la IP, la máscara de red, la puerta de enlace, etc.

En modo monitor, **no necesitas IP**, porque no te vas a asociar a ninguna red, sólo a capturar paquetes. Por eso se recomienda matar `dhclient` también.

## 3. Falsificación de nuestra dirección MAC y tips

La falsificación de la dirección MAC es una técnica importante para mantener el anonimato durante las pruebas de penetración y evitar ser detectado o bloqueado.

### Procedimiento técnico:
1. Importante desactivar la interfaz:
   ```bash
   ifconfig wlan0mon down
   ```

 2. Verificar la dirección MAC:
   ```bash
   macchanger -s wlan0mon
   ```

3. Cambiar la dirección MAC:
   ```bash
   macchanger --mac=00:11:22:33:44:55 wlan0mon
   ```
   O para generar una MAC aleatoria:
   ```bash
   macchanger -r wlan0mon
   ```

4. Reactivar la interfaz:
   ```bash
   ifconfig wlan0mon up
   ```

### Tips adicionales:
- Usar direcciones MAC de fabricantes reales para evitar detección
```bash
macchanger -l | greep -i "fabricante"
# los últimos 6 pueden ser inventados
```
- Cambiar la MAC regularmente durante sesiones largas de auditoría
- Algunas tarjetas requieren ser reiniciadas completamente para que el cambio sea efectivo
### Consideraciones de seguridad:
- Los puntos de acceso modernos pueden detectar comportamientos sospechosos incluso con MAC falsificada
- Algunos routers empresariales tienen sistemas de detección de intrusiones que pueden identificar patrones de tráfico anómalos

## 4. Uso de Airodump para efectuar un análisis del entorno (P.A.)

Airodump-ng es una herramienta fundamental para la recopilación de información sobre redes inalámbricas en el entorno, permitiendo identificar puntos de acceso, clientes conectados y otros datos relevantes.
### Comando básico:
```bash
airodump-ng wlan0mon
```

### Información mostrada:
- Primera línea:
		Canal, Tiempo transcurrido, fecha, y si se ha capturado un handshake y de que red

- **BSSID**: Dirección MAC del punto de acceso
- **PWR**: Nivel de señal (cuanto más cercano a 0, más fuerte). Si es -1 significa que estamos fuera del alcance o que el controlador no acepta informes de nivel de señal
- **Beacons**: Número de paquetes beacon capturados
- **Data**: Paquetes de datos (importante para capturar handshakes)
- `#/s` nº de paquetes de datos enviados por segundo (ultimos 10 seg)
- **CH**: Canal en el que opera la red
- **MB**: Velocidad máxima soportada
- **ENC**: Tipo de cifrado (WEP, WPA, WPA2,OPN)
- **CIPHER**: Algoritmo de cifrado (TKIP, CCMP)
- **AUTH**: Tipo de autenticación (PSK, MGT)
- **ESSID**: Nombre de la red

### Consideraciones importantes:
- Las redes WPA y WPA2 se muestran de forma diferente en Airodump
- WPA utiliza típicamente TKIP como cifrado
- WPA2 utiliza típicamente CCMP (basado en AES) como cifrado
- Solo se pueden atacar redes con autenticación PSK (Pre-Shared Key)
- Las redes empresariales (AUTH=MGT) utilizan autenticación 802.1X y no son vulnerables a los ataques de diccionario convencionales

### Vulnerabilidades específicas:
- WPA con TKIP es vulnerable a ataques de reinstalación de clave (KRACK)
- WPA2 con CCMP ofrece mejor seguridad pero sigue siendo vulnerable a ataques de fuerza bruta si la contraseña es débil
